problem link : "https://www.geeksforgeeks.org/problems/missing-number-in-array1416/1?page=1&category=Arrays&difficulty=Easy&sortBy=submissions"

// Question Statement is :

Missing in Array
Given an array of size n-1 such that it only contains distinct integers in the range of 1 to n. Return the missing element.

Examples:
Input: n = 5, arr[] = {1,2,3,5}
Output: 4
Explanation : All the numbers from 1 to 5 are present except 4.

Input: n = 2, arr[] = {1}
Output: 2
Explanation : All the numbers from 1 to 2 are present except 2.

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ n ≤ 106
1 ≤ arr[i] ≤ 106


// My Solved Code

class Solution {
  public:
    int missingNumber(int n, vector<int>& arr) {
        // step 1 : first we will sort the element which we have in an array.
        sort(arr.begin(),arr.end());

        // step 2 : we will iterate till array last index and we will match if index+1 equals to arr element yes or not. if not then that element is not present and it will return.
        for(int i=0;i<n;i++){
            if(arr[i]!=i+1){
                return i+1;
            }
        }
    }
};
